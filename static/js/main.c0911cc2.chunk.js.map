{"version":3,"sources":["Components/Navbar.js","Components/Buttons.js","Components/Img.js","Components/ImgList.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","id","type","aria-label","aria-hidden","data-toggle","aria-haspopup","aria-expanded","href","Component","Buttons","Img","props","src","url","alt","ImgList","imgs","data","map","img","Components_Img","urls","small","key","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","fetch","then","res","json","setState","catch","err","console","log","Components_Navbar","Components_Buttons","Components_ImgList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0911cc2.chunk.js","sourcesContent":["import '../App.css';\nimport React, { Component } from 'react';\nimport '../App';\n class Navbar extends Component {\n    render(){\n        return(\n            <div className=\"d-flex align-items-center\" id=\"div\">\n                <div className=\"box1\">\n                    <div className=\"input-group\">\n                        <i className=\"fab fa-pinterest\" id=\"iconPinterest\"></i>\n                        <input type=\"text\" className=\"form-control\" aria-label=\"Text input with dropdown button\" id=\"searchPin\"/>\n                        <i id=\"lupa\" className=\"fas fa-search\" ></i>\n                        <button type=\"button\" id=\"close\" className=\"close\" aria-label=\"Close\" >\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">All pins</button>\n                            <div className=\"dropdown-menu\">\n                                <a className=\"dropdown-item font-weight-bold\" href=\"/\">All pins</a>\n                                <a className=\"dropdown-item\" href=\"/\">Your pins</a>\n                                <a className=\"dropdown-item\" href=\"/\">Product pins</a>                       \n                                <a className=\"dropdown-item\" href=\"/\">People</a>\n                                <a className=\"dropdown-item\" href=\"/\">Boards</a>\n                            </div>\n                        </div>\n                  </div>\n                </div>    \n                <div className=\"box2\">\n                    <div className=\"links\">\n                        <p>Home</p>\n                        <p>Following</p>\n                        <p>Explore</p>\n                        <i className=\"fas fa-user-circle\" id=\"userIcon\"></i>\n                        <a  href=\"/\"><p>Antonella</p></a>\n                    </div>        \n                </div>   \n                <div className=\"box3\">    \n                    <div className=\"\" id=\"iconoFinal\"> \n                        <i className=\"fas fa-comment-dots\"></i>\n                        <i className=\"fas fa-bell\"></i>\n                        <i className=\"fas fa-ellipsis-h\"></i>\n                    </div>\n                </div>   \n            </div>\n        \n        )\n    }\n  }\n  \n  export default Navbar; \n\n  ","import '../App.css';\nimport React, { Component } from 'react';\nimport '../App';\n\n class Buttons extends Component {\n    render(){\n        return(\n        <div  id=\"grupoBotones\">\n            <i className=\"fas fa-angle-left\"></i>\n            <button type=\"button\" className=\"btn btn font-weight-bold\">kittens</button>\n            <button type=\"button\" className=\"btn btn-secondary font-weight-bold\">felines</button>\n            <button type=\"button\" className=\"btn btn-success font-weight-bold\">DIY</button>\n            <button type=\"button\" className=\"btn btn-secondary font-weight-bold\">breeds</button>\n            <button type=\"button\" className=\"btn btn  font-weight-bold\">funny</button>\n            <button type=\"button\" className=\"btn btn-info font-weight-bold\">white</button>\n            <button type=\"button\" className=\"btn btn-light font-weight-bold\">stuff</button>\n            <button type=\"button\" className=\"btn btn-dark font-weight-bold\">cute</button>\n            <button type=\"button\" className=\"btn btn font-weight-bold\">kittens</button>\n            <button type=\"button\" className=\"btn btn-secondary font-weight-bold\">felines</button>\n            <button type=\"button\" className=\"btn btn-success font-weight-bold\">toys</button>\n            <button type=\"button\" className=\"btn btn-secondary font-weight-bold\">breeds</button>\n            <button type=\"button\" className=\"btn btn  font-weight-bold\">funny</button>\n            <button type=\"button\" className=\"btn btn-info font-weight-bold\">white</button>\n            <button type=\"button\" className=\"btn btn-light font-weight-bold\">stuff</button>\n            <button type=\"button\" className=\"btn btn-dark font-weight-bold\">cute</button>\n            <i className=\"fas fa-angle-right\"></i>\n        </div>\n        )\n\n    }\n\n}\n\nexport default Buttons;","import React from 'react';\n\nconst Img = props => (\n  <li className=\"img-wrap\">\n    <img src={props.url} alt=\"unsplashImage\"/>\n  </li>\n);\n\nexport default Img;","import React from 'react';\nimport Img from './Img';\n\nconst ImgList = props => {\n\tconst results = props.data;\n\tlet imgs = results.map(img => <Img url={img.urls.small} key={img.id}/>);\n\n\treturn (\n\t\t<ul className=\"img-list\">\n\t\t\t{imgs}\n\t\t</ul>\n\t);\n};\n\nexport default ImgList;","import React, { Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport Buttons from './Components/Buttons';\nimport ImgList from './Components/ImgList';\n\n\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  constructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\timgs: []\n\t\t};\n\t}\n\t\n\n\tcomponentDidMount() {\n\t\tfetch('https://api.unsplash.com/photos/?per_page=20&client_id=6d941d1ebb2255c24c2b6903e6bb9e25049f5ae6ffbe08b8c8d8eeeb063336b2')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({ imgs: data });\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error happened during fetching!', err);\n\t\t\t});\n\t}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n       <Buttons/>\n\t\t\t \n\t\t\t \n       <div className=\"main-content\">\n\t\t\t \t\n\t\t\t\t\t<ImgList data={this.state.imgs} />\n\t\t\t\t</div>\n      \n\t\t\t \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}